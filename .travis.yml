language: c++

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.6
    - llvm-toolchain-precise-3.7
    - llvm-toolchain-precise-3.8
    packages:
    - libeigen3-dev
    - g++-5
    - gcc-5
    - g++-6
    - gcc-6
    - clang-3.6
    - clang-3.7
    - clang-3.8

env:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true
  
matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
  include:      
    # Clang 3.8
    - os: linux
      env: COMPILER=clang++-3.8 CCOMPILER=clang-3.8 COMPUTE_COVERAGE=false
      compiler: clang
     
install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  
  ############################################################################
  # Override compiler if needed
  ############################################################################
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; export CC=${CCOMPILER}; fi
  
    ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi
    
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo apt-get install libgtest-dev
      cd /usr/src/gtest
      sudo cmake CMakeLists.txt
      sudo make 
      # copy or symlink libgtest.a and libgtest_main.a to your /usr/lib folder
      sudo cp *.a /usr/lib
      cd ${DEPS_DIR}
      if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
        travis_retry wget --no-check-certificate --quiet -S http://mirrors.us.kernel.org/ubuntu//pool/universe/l/lcov/lcov_1.12-3_all.deb
        sudo dpkg -i lcov_1.12-3_all.deb
        # install lcov to coveralls conversion + upload tool
        gem install coveralls-lcov
      fi
    else
      git clone https://github.com/google/googletest.git
      cd googletest && mkdir build && cd build && cmake .. && make
      sudo cp -r ../googletest/include/gtest /usr/local/include/
      sudo cp googlemock/gtest/lib*.a /usr/local/lib
    fi
script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir build && cd build && cmake .. && make && ctest
after_success:
  - |
    if [[ "${COMPUTE_COVERAGE}" == "true" ]]; then
      lcov --gcov-tool ${GCOV} --capture --no-external --directory . --base-directory ../clang-type-erase -rc lcov_branch_coverage=1 --output-file coverage.info
      coveralls-lcov --repo-token ${COVERALLS_TOKEN} coverage.info

